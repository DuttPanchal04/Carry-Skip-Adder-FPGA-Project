$date
	Fri Jun 20 03:26:18 2025
$end

$version
	Synopsys VCS version U-2023.03-SP2_Full64
$end

$timescale
	1ns
$end

$comment Csum: 1 dfafb9c3f77485d3 $end


$scope module top_tb $end
$var reg 8 ! a [7:0] $end
$var reg 8 " b [7:0] $end
$var reg 1 # cin $end
$var wire 8 $ sum [7:0] $end
$var wire 1 % cout $end

$scope module dut $end
$var wire 1 & w9 $end
$var wire 8 ! a [7:0] $end
$var wire 8 " b [7:0] $end
$var wire 1 # cin $end
$var wire 8 $ sum [7:0] $end
$var wire 1 % cout $end

$scope module b1 $end
$var wire 4 ' a [3:0] $end
$var wire 4 ( b [3:0] $end
$var wire 1 # cin $end
$var wire 4 ) sum [3:0] $end
$var wire 1 & cout $end
$var wire 1 * w1 $end
$var wire 1 + w2 $end
$var wire 1 , w3 $end
$var wire 1 - w4 $end
$var wire 1 . p0 $end
$var wire 1 / p1 $end
$var wire 1 0 p2 $end
$var wire 1 1 p3 $end
$var wire 1 2 p_b1 $end

$scope module m1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 # cin $end
$var wire 1 5 sum $end
$var wire 1 * cout $end
$var wire 1 . p $end
$upscope $end


$scope module m2 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 * cin $end
$var wire 1 8 sum $end
$var wire 1 + cout $end
$var wire 1 / p $end
$upscope $end


$scope module m3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 + cin $end
$var wire 1 ; sum $end
$var wire 1 , cout $end
$var wire 1 0 p $end
$upscope $end


$scope module m4 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 , cin $end
$var wire 1 > sum $end
$var wire 1 - cout $end
$var wire 1 1 p $end
$upscope $end


$scope module m5 $end
$var wire 1 - s0 $end
$var wire 1 # s1 $end
$var wire 1 2 sel $end
$var wire 1 & y $end
$upscope $end

$upscope $end


$scope module b2 $end
$var wire 4 ? a [3:0] $end
$var wire 4 @ b [3:0] $end
$var wire 1 & cin $end
$var wire 4 A sum [3:0] $end
$var wire 1 % cout $end
$var wire 1 B w5 $end
$var wire 1 C w6 $end
$var wire 1 D w7 $end
$var wire 1 E w8 $end
$var wire 1 F p4 $end
$var wire 1 G p5 $end
$var wire 1 H p6 $end
$var wire 1 I p7 $end
$var wire 1 J p_b2 $end

$scope module m6 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 & cin $end
$var wire 1 M sum $end
$var wire 1 B cout $end
$var wire 1 F p $end
$upscope $end


$scope module m7 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 B cin $end
$var wire 1 P sum $end
$var wire 1 C cout $end
$var wire 1 G p $end
$upscope $end


$scope module m8 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 C cin $end
$var wire 1 S sum $end
$var wire 1 D cout $end
$var wire 1 H p $end
$upscope $end


$scope module m9 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 D cin $end
$var wire 1 V sum $end
$var wire 1 E cout $end
$var wire 1 I p $end
$upscope $end


$scope module m10 $end
$var wire 1 E s0 $end
$var wire 1 & s1 $end
$var wire 1 J sel $end
$var wire 1 % y $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
1#
0%
02
0J
05
xT
x=
xD
xQ
x:
xC
xN
x7
xB
xK
x4
x&
x<
x,
x9
x+
x6
x*
x3
xI
x-
xV
xH
xE
xS
xG
xP
xF
xM
x1
xU
x>
x0
xR
x;
x/
xO
x8
x.
xL
b00100100 !
b10000001 "
bxxxx (
bxxxx @
bxxxxxxxx $
bxxxx )
bxxxx '
bxxxx ?
bxxxx A
$end
0-
0E
0T
0Q
1N
0K
0<
19
06
03
b0100 '
b0010 ?
1U
0R
0O
0L
0=
0:
07
14
b0001 (
b1000 @
b0110 )
bxxxxxxx0 $
1V
0S
1P
0M
0>
1;
18
b10100110 $
b1010 A
0D
0C
0B
0&
0,
0+
1*
1I
0H
1G
0F
01
10
0/
1.
