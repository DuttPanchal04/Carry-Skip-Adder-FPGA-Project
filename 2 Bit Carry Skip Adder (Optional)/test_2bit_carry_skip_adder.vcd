$date
	Fri Jun 20 03:23:26 2025
$end

$version
	Synopsys VCS version U-2023.03-SP2_Full64
$end

$timescale
	1ns
$end

$comment Csum: 1 419de4279ef82ebf $end


$scope module top_tb $end
$var reg 2 ! a [1:0] $end
$var reg 2 " b [1:0] $end
$var reg 1 # cin $end
$var wire 1 $ sum [1] $end
$var wire 1 % sum [0] $end
$var wire 1 & cout $end

$scope module dut $end
$var wire 2 ! a [1:0] $end
$var wire 2 " b [1:0] $end
$var wire 1 # cin $end
$var wire 1 $ sum [1] $end
$var wire 1 % sum [0] $end
$var wire 1 & cout $end

$scope module u1 $end
$var wire 2 ! a [1:0] $end
$var wire 2 " b [1:0] $end
$var wire 1 # cin $end
$var wire 1 $ sum [1] $end
$var wire 1 % sum [0] $end
$var wire 1 & cout $end
$var wire 1 ' w1 $end
$var wire 1 ( w2 $end
$var wire 1 ) p0 $end
$var wire 1 * p1 $end
$var wire 1 + p_block $end

$scope module fa0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 # cin $end
$var wire 1 % sum $end
$var wire 1 ' cout $end
$var wire 1 ) p $end
$upscope $end


$scope module fa1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 ' cin $end
$var wire 1 $ sum $end
$var wire 1 ( cout $end
$var wire 1 * p $end
$upscope $end


$scope module mux $end
$var wire 1 ( s0 $end
$var wire 1 # s1 $end
$var wire 1 + sel $end
$var wire 1 & y $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
1#
1&
0)
0*
0+
1%
1$
x.
x,
x(
x/
x-
1'
b11 !
b11 "
$end
1(
1.
1,
1/
1-
